from nfa import Regex

def wildcard_tests():
    r1 = Regex(".")
    assert r1.dfa_match("a")
    assert r1.dfa_match("b")
    assert r1.dfa_match("A")
    assert r1.dfa_match("Z")
    assert not r1.dfa_match("aZ")
    rx = Regex(".*")
    assert rx.dfa_match("a")
    assert rx.dfa_match("b")
    assert rx.dfa_match("Aa")
    assert rx.dfa_match("Zz")
    assert rx.dfa_match("")
    r2 = Regex(".a")
    assert r2.dfa_match("aa")
    assert r2.dfa_match("ba")
    assert not r2.dfa_match("ab")
    r3 = Regex("b.a")
    assert r3.dfa_match("bXa")
    assert r3.dfa_match("bZa")
    assert not r3.dfa_match("ba")
    r4 = Regex("a.*")
    assert r4.dfa_match("a")
    assert r4.dfa_match("ax")
    assert r4.dfa_match("axZ")
    assert not r4.dfa_match("ba")
    r5 = Regex(".*a")
    assert r5.dfa_match("a")
    assert r5.dfa_match("xa")
    assert r5.dfa_match("zza")
    assert not r5.dfa_match("ab")
    r6 = Regex(".+")
    assert r6.dfa_match("a")
    assert r6.dfa_match("xa")
    assert r6.dfa_match("zza")
    assert not r6.dfa_match("")
    r7 = Regex("(.+)a")
#     r7.visualize_nfa()
    r7.visualize_dfa()
    assert r7.dfa_match("xa")
    assert r7.dfa_match("za")
    assert r7.dfa_match("zza")
    assert r7.dfa_match("zaa")
    assert not r7.dfa_match("a")



def v1_dfa_tests():
    r1 = Regex("ab*")
    assert r1.dfa_match("a")
    assert r1.dfa_match("ab")
    assert r1.dfa_match("abb")
    r2 = Regex("a")
    assert r2.dfa_match("a")
    assert not r2.dfa_match("")
    assert not r2.dfa_match("aa")
    assert not r2.dfa_match("b")
    r3 = Regex("a*")
    assert r3.dfa_match("aa")
    assert not r3.dfa_match("b")
    assert r3.dfa_match("")
    assert r3.dfa_match("a")
    r4 = Regex("a|b")
    assert not r4.dfa_match("ab")
    assert not r4.dfa_match("")
    assert r4.dfa_match("a")
    assert r4.dfa_match("b")
    r5 = Regex("ab")
    assert r5.dfa_match("ab")
    assert not r5.dfa_match("")
    assert not r5.dfa_match("a")
    assert not r5.dfa_match("b")
    r6 = Regex("((a|b)c)*")
    assert r6.dfa_match("")
    assert r6.dfa_match("ac")
    assert r6.dfa_match("bc")
    assert r6.dfa_match("acac")
    assert r6.dfa_match("acbc")
    assert not r6.dfa_match("ab")
    assert not r6.dfa_match("a")
    assert not r6.dfa_match("b")
    r7 = Regex("a(b|c)*")
    assert r7.dfa_match("a")
    assert r7.dfa_match("ac")
    assert r7.dfa_match("acc")
    assert r7.dfa_match("abbb")
    assert not r7.dfa_match("bc")
    assert not r7.dfa_match("bcc")   
    r8 = Regex("a*(b?|c+)*")
    assert r8.dfa_match("")
    assert r8.dfa_match("a")
    assert r8.dfa_match("b")
    assert r8.dfa_match("c")
    assert r8.dfa_match("ab")
    assert r8.dfa_match("ac")
    assert r8.dfa_match("bb") # tricky, can be closure of 0or1
    assert r8.dfa_match("cc")
    assert r8.dfa_match("aab")
    assert r8.dfa_match("abb")
    assert r8.dfa_match("acc")
    assert r8.dfa_match("aabb")
    assert r8.dfa_match("aacc")
    assert r8.dfa_match("bc")
    assert r8.dfa_match("cb")
    assert r8.dfa_match("abc")
    assert r8.dfa_match("acb")
    assert r8.dfa_match("ccb")
    assert r8.dfa_match("bbc")
    r9 = Regex("a?")
    assert r9.dfa_match("")
    assert r9.dfa_match("a")
    assert not r9.dfa_match("aa")
    assert not r9.dfa_match("b")
    assert not r9.dfa_match("ab")
    assert not r9.dfa_match("ba")
    r10 = Regex("a+")
    assert r10.dfa_match("a")
    assert r10.dfa_match("aa")
    assert not r10.dfa_match("")
    assert not r10.dfa_match("b")
    assert not r10.dfa_match("ab")
    assert not r10.dfa_match("ba")
    r11 = Regex("(a|b)*")
    assert r11.dfa_match("ab")
    assert r11.dfa_match("abababba")
    assert r11.dfa_match("")
    assert r11.dfa_match("a")
    assert r11.dfa_match("b")
#     r1.visualize_nfa()
#     r5.visualize_dfa()
